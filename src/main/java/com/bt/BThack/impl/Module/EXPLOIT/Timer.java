package com.bt.BThack.impl.Module.EXPLOIT;

import com.bt.BThack.System.Client;
import com.bt.BThack.api.Managers.Thread.ThreadManager;
import com.bt.BThack.api.Module.Module;
import org.lwjgl.input.Keyboard;

import java.util.ArrayList;
import java.util.Objects;

public class Timer extends Module {
    public Timer() {
        super("Timer",
                "Speeds up/slows down game ticks.",
                Keyboard.KEY_NONE,
                Category.EXPLOIT,
                false
        );

        ArrayList<String> options = new ArrayList<>();

        options.add("Fast");
        options.add("Slow");
        options.add("Micro Tick");

        addMode("Mode", this, options);
        addSlider("Tick speed", this, 2,1,10,false);
        addSlider("Mode","Micro Tick","Micro Ticks", this, 0, -10, 10, false);
    }

    @Override
    public void onEnable() {
        if (nullCheck()) return;

        ThreadManager.startNewThread(thread -> {
            while (Client.getModuleByName("Timer").isEnabled()) {
                String Mode = Module.getMode("Timer", "Mode");
                float speed = (float) Module.getSlider("Timer", "Tick speed");
                if (Objects.equals(Mode, "Fast")) {
                    mc.timer.tickLength = 50f / speed;
                } else if (Objects.equals(Mode, "Slow")) {
                    mc.timer.tickLength = 50f * speed;
                } else {
                    byte microSpeed = (byte) Module.getSlider("Timer", "Micro Ticks");
                    mc.timer.tickLength = 50f + microSpeed;
                }

                Client.getModuleByName("Timer").arrayListInfo = Module.getMode("Timer", "Mode");

                try {
                    thread.sleep(50);
                } catch (InterruptedException ignored) {}
            }

            mc.timer.tickLength = 50f;
        });
    }
}
